{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","components/Form/Form.module.css","api-services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Section/Section.js","components/ContactsList/ContactsList.js","redux/filter/filter-selectors.js","redux/filter/filter-actions.js","components/Filter/Filter.js","components/Loader/Loader.js","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","addContact","contact","post","then","data","deleteContact","contactId","delete","fetchContacts","createAsyncThunk","a","get","response","contacts","name","contactsAPI","id","getContactsList","state","items","getFilteredContacts","normalizedFilter","filter","toLocaleLowerCase","includes","Form","useState","setName","phone","setPhone","dispatch","useDispatch","contactsList","useSelector","handleChange","event","currentTarget","value","resetForm","addContacts","some","toLowerCase","alert","className","s","form__container","onSubmit","preventDefault","label","name__input","input","type","pattern","title","required","onChange","add__btn","Section","children","container","ContactsList","list","map","item","deleteBtn","onClick","getFilterValue","changeFilter","createAction","Filter","target","Spinner","loader","color","height","width","timeout","App","isLoading","loading","useEffect","title_contacts","createReducer","fulfilled","_","payload","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contactsReducer","filterReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.a34d16d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__M6NjA\",\"deleteBtn\":\"ContactsList_deleteBtn__2C1Xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2LHYD\",\"input\":\"Filter_input__1yz7o\",\"title\":\"Filter_title__Ifj5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__w78QK\",\"title\":\"App_title__TXsda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1LS-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__otHxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__container\":\"Form_form__container__1c4DM\",\"label\":\"Form_label__2k8hv\",\"input\":\"Form_input__3C_TI\",\"add__btn\":\"Form_add__btn__lbtHj\",\"name__input\":\"Form_name__input__2kiIA\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://61f7bc8239431d0017eaf9b1.mockapi.io';\n\nexport const fetchContacts = () => {\n  return axios.get('/contacts').then(response => response.data);\n};\n\nexport const addContact = contact => {\n  return axios.post('/contacts', contact).then(({ data }) => data);\n};\n\nexport const deleteContact = contactId => {\n  return axios.delete(`/contacts/${contactId}`);\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport * as contactsAPI from '../../api-services/contacts-api';\naxios.defaults.baseURL = 'https://61f7bc8239431d0017eaf9b1.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async name => {\n    const contact = await contactsAPI.addContact(name);\n    return contact;\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async contactId => {\n    const {\n      data: { id },\n    } = await contactsAPI.deleteContact(contactId);\n    return id;\n  },\n);\n","export const getContactsList = state => state.contacts.items;\n\nexport const getFilteredContacts = state => {\n  const normalizedFilter = state.contacts.filter.toLocaleLowerCase();\n\n  return state.contacts.items.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContactsList } from '../../redux/contacts/contacts-selectors';\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(getContactsList);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addContacts({ name, phone });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const addContacts = contact => {\n    contactsList.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact(contact));\n  };\n\n  return (\n    <form className={s.form__container} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.name__input}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире\n          и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n          Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        <span className={s.name__input}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={phone}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.add__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, phone }) => (\n        <li className={s.item} key={id}>\n          {name}: {phone}\n          <button\n            className={s.deleteBtn}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","export const getFilterValue = state => state.contacts.filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from '../../redux/filter/filter-selectors';\nimport { changeFilter } from '../../redux/filter/filter-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilterValue);\n  return (\n    <label className={s.label}>\n      <span className={s.title}>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={({ target }) => dispatch(changeFilter(target.value))}\n      />\n    </label>\n  );\n}\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default function Spinner() {\n  return (\n    <div className={s.loader}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#5a7ffa\"\n        height={80}\n        width={80}\n        timeout={2000}\n      />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from './components/Form';\nimport Section from './components/Section';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Loader from './components/Loader';\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport s from './App.module.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.loading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Section>\n        <Form />\n      </Section>\n      <h2 className={s.title_contacts}>Contacts</h2>\n      <Section>\n        <Filter />\n        {isLoading && <Loader />}\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nexport const items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport * as contactsReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n  items: contactsReducer.items,\n  filter: filterReducer,\n  loading: contactsReducer.loading,\n});\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(contactsPersistConfig, rootReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n\nexport const store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// export const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\n// import { store, persistor } from './redux/store';\nimport { store } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}